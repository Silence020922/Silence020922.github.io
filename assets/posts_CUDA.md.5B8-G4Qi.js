import{_ as n,o as h,c as k,k as s,a as i,R as a}from"./chunks/framework.CP3Xps-Z.js";const Y=JSON.parse('{"title":"CUDA编程","description":"无...","frontmatter":{"date":"2024-03-01T00:00:00.000Z","title":"CUDA编程","tags":["CUDA"],"description":"无..."},"headers":[],"relativePath":"posts/CUDA.md","filePath":"posts/CUDA.md"}'),t={name:"posts/CUDA.md"},l=a(`<h1 id="入门-with-c" tabindex="-1">入门(with C++) <a class="header-anchor" href="#入门-with-c" aria-label="Permalink to &quot;入门(with C++)&quot;">​</a></h1><p>参考<a href="https://developer.nvidia.cn/cuda-gpus#collapseOne" target="_blank" rel="noreferrer">Nvida-zh</a>了解支持CUDA的Nvida GPU型号。</p><h2 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h2><p>核函数使用<code>__global__</code>进行修饰，其返回类型必须是<code>void</code>类型。在核函数中可以使用<code>return</code>关键字但不会返回任何值。核函数无法成为一个类的成员，通常情况下，使用一个包装函数对核函数进行调用，将包装函数定义为类的成员。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__global__ </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> hello_world2gpu</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Hello world, from GPU.</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //nvcc不支持cout&lt;&lt;方式输出</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    hello_world2gpu</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // &lt;&lt;&lt;grid_size,block_size&gt;&gt;&gt;配置线程 线程块数量-单个块线程数量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    cudaDeviceSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 同步函数</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex1</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -arch=compute_61</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -code=sm_80</span></span></code></pre></div><p><code>-arch=compute_xx</code>指定虚拟架构，<code>-code=sm_xx</code>指定真实计算能力，实践中保持兼容性的条件下，虚拟架构尽可能小，真实架构尽可能大。<br> 同时，为保证兼容性，可以指定多组计算能力，例如</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex2_fat</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_50,code=sm_50</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_60,code=sm_60</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_70,code=sm_70</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_80,code=sm_80</span></span></code></pre></div><p>生成的可执行文件称为胖二进制文件，注意过多制定计算能力会增加编译时间和可执行文件的大小。</p>`,9),p={class:"tip custom-block"},E=s("p",{class:"custom-block-title"},"TIP",-1),e={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},F={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.467ex",height:"1.464ex",role:"img",focusable:"false",viewBox:"0 -442 2416.3 647","aria-hidden":"true"},r=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1016.7,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1506.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1951.3,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g></g></g>',1),d=[r],C=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"x"),s("mo",null,","),s("mi",null,"y"),s("mo",null,","),s("mi",null,"z")])],-1),D={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.816ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 3012.6 915.9","aria-hidden":"true"},y=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1),A=[y],o=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mn",null,"31")])]),s("mo",null,"−"),s("mn",null,"1")])],-1),c={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},_={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.467ex",height:"1.464ex",role:"img",focusable:"false",viewBox:"0 -442 2416.3 647","aria-hidden":"true"},T=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1016.7,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1506.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1951.3,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g></g></g>',1),Q=[T],m=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"x"),s("mo",null,","),s("mi",null,"y"),s("mo",null,","),s("mi",null,"z")])],-1),u=a(`<h2 id="nvcc即时编译" tabindex="-1">NVCC即时编译 <a class="header-anchor" href="#nvcc即时编译" aria-label="Permalink to &quot;NVCC即时编译&quot;">​</a></h2><p>参考<a href="https://zhuanlan.zhihu.com/p/432674688" target="_blank" rel="noreferrer">知乎</a><br> 大概用于在当前架构下生成更前向的虚拟架构的PTX代码，此时指定的两个计算能力都是虚拟架构的计算能力，且必须一致，例如： 若本人GPU不支持80架构</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex2_fat</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_50,code=sm_50</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_60,code=sm_60</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_70,code=sm_70</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_80,code=compute_80</span></span></code></pre></div><h2 id="cuda矩阵加法" tabindex="-1">CUDA矩阵加法 <a class="header-anchor" href="#cuda矩阵加法" aria-label="Permalink to &quot;CUDA矩阵加法&quot;">​</a></h2><p>代码参考<a href="https://github.com/sangyc10/CUDA-code/tree/master/3.1lesson" target="_blank" rel="noreferrer">github</a></p><h3 id="cuda程序框架" tabindex="-1">CUDA程序框架 <a class="header-anchor" href="#cuda程序框架" aria-label="Permalink to &quot;CUDA程序框架&quot;">​</a></h3><ul><li>设置GPU</li></ul><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 头文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDeviceCount</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">    cudaError_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> cudaGetDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 获取GPU数量，成功返回cudaSuccess</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">||</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDeviceCount </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">No CUDA camptable GPU found! </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">The count of GPUs is %d. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDev </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDev</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // host 设置GPU</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Fail to set GPU %d for computing. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDev</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Set GPU successfully. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h3 id="内存管理" tabindex="-1">内存管理 <a class="header-anchor" href="#内存管理" aria-label="Permalink to &quot;内存管理&quot;">​</a></h3><p>参考<a href="https://www.runoob.com/cprogramming/c-memory-management.html" target="_blank" rel="noreferrer">菜鸟教程</a></p><h3 id="自定义设备函数" tabindex="-1">自定义设备函数 <a class="header-anchor" href="#自定义设备函数" aria-label="Permalink to &quot;自定义设备函数&quot;">​</a></h3><ul><li>设备函数使用<code>__device__</code>修饰</li><li>核函数使用<code>__global__</code>函数修饰，一般由主机调用，设备执行。(也存在核函数中调用核函数的现象，此时由设备调用)</li><li><code>__global__</code>不能和<code>__host__</code>，<code>__device__</code>同时使用。</li><li>主机函数使用<code>__host__</code>修饰，对于主机端的函数，该修饰符可省略。</li><li>若函数需在主机和设备中运行，可使用<code>__host__</code>, <code>__device__</code>同时修饰该函数，此时编译器会针对主机和设备分别编译该函数，减少冗余代码。</li></ul><h2 id="cuda错误检查" tabindex="-1">CUDA错误检查 <a class="header-anchor" href="#cuda错误检查" aria-label="Permalink to &quot;CUDA错误检查&quot;">​</a></h2><p>CUDA错误会发生在两个阶段——编译时错误，运行时错误。编译时发生错误编译器会将错误所在位置进行返回。</p><h3 id="runtime-api-错误" tabindex="-1">Runtime API 错误 <a class="header-anchor" href="#runtime-api-错误" aria-label="Permalink to &quot;Runtime API 错误&quot;">​</a></h3><p>参考<a href="https://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__TYPES.html#group__CUDART__TYPES_1g3f51e3575c2178246db0a94a430e0038" target="_blank" rel="noreferrer">Nvida官方文档</a></p><h3 id="错误检查函数" tabindex="-1">错误检查函数 <a class="header-anchor" href="#错误检查函数" aria-label="Permalink to &quot;错误检查函数&quot;">​</a></h3><p><code>cudaGetErrorName</code>: 获取错误代码对应的错误名称，返回 <code>char *</code>类型<br><code>cudaGetErrorString</code>: 获取错误代码的描述信息，返回<code>char *</code>类型</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaError_t</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaError_t</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> char*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> filename</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> linenum</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Cuda_Error:</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">code:%d, name:%s, description:%s</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file:%s, line:%d</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">        error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetErrorName</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetErrorString</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">filename</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">linenum</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> error_code</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h3 id="检查核函数" tabindex="-1">检查核函数 <a class="header-anchor" href="#检查核函数" aria-label="Permalink to &quot;检查核函数&quot;">​</a></h3><p>错误检查函数无法捕捉调用核函数相关错误，由于<code>__global__ void</code>，核函数不会返回错误值，可使用如下代码捕捉核函数中的可能错误。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetLastError</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// 返回上一条cuda_Error</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaDeviceSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //由于CPU与GPU异步，需在此加入一个同步函数，等待核函数运行完成。</span></span></code></pre></div><h2 id="cuda记时" tabindex="-1">CUDA记时 <a class="header-anchor" href="#cuda记时" aria-label="Permalink to &quot;CUDA记时&quot;">​</a></h2><h3 id="事件记时" tabindex="-1">事件记时 <a class="header-anchor" href="#事件记时" aria-label="Permalink to &quot;事件记时&quot;">​</a></h3><p>程序执行时间计时，是CUDA程序执行性能的重要表现，使用<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__EVENT.html" target="_blank" rel="noreferrer">事件记时</a>方式。框架如下</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaEvent_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 定义用来记时的CUDA事件变量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //初始化事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 记录代表时间开始的事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventQuery</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">	//此处不可用错误检测函数，cudaErrorNotReady</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">addFromGPU</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">grid</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> block</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_C</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iElemCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 核函数，需要记时的代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 记录代表时间结束的事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventElapsedTime</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">elapsed_time</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //计算两个work间的elapsed time</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// printf(&quot;Time = %g ms.\\n&quot;, elapsed_time);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">repeat </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 不计入第0次的情况，这是由于第一次调用核函数往往时间更多</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    t_sum </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventDestroy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 销毁前面定义的时间类型变量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventDestroy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span></code></pre></div><h3 id="nvprof-性能刨析工具" tabindex="-1">nvprof 性能刨析工具 <a class="header-anchor" href="#nvprof-性能刨析工具" aria-label="Permalink to &quot;nvprof 性能刨析工具&quot;">​</a></h3><p><code>nvprof</code>是一个可执行文件，执行方式为: <code>nvprof ./exe_name</code>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>目前较新的GPU可能不再支持nvprof，可替换为Nsight System，Arch系统下包含在cuda-tools包中，执行nsys进行分析。</p></div><h2 id="运行时gpu信息的查询" tabindex="-1">运行时GPU信息的查询 <a class="header-anchor" href="#运行时gpu信息的查询" aria-label="Permalink to &quot;运行时GPU信息的查询&quot;">​</a></h2><p>查询熟知自身GPU性各项能才能高效进行CUDA程序开发，参考<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__DEVICE.html" target="_blank" rel="noreferrer">Nvida doc</a></p><h3 id="gpu性能评价指标" tabindex="-1">GPU性能评价指标 <a class="header-anchor" href="#gpu性能评价指标" aria-label="Permalink to &quot;GPU性能评价指标&quot;">​</a></h3><ul><li>浮点数运算峰值，FLOPS</li><li>GPU内存、带宽。</li></ul><h3 id="运行时api查询gpu信息" tabindex="-1">运行时API查询GPU信息 <a class="header-anchor" href="#运行时api查询gpu信息" aria-label="Permalink to &quot;运行时API查询GPU信息&quot;">​</a></h3><p>GPU硬件知识参考<a href="https://zhuanlan.zhihu.com/p/462191421" target="_blank" rel="noreferrer">知乎</a>，<code>prop</code>结构体中包含的信息参考<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__DEVICE_g5aa4f47938af8276f08074d09b7d520c.html#g5aa4f47938af8276f08074d09b7d520c" target="_blank" rel="noreferrer">Nvida</a></p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置设备ID</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置使用的GPU</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaDeviceProp prop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 结构体，存储GPU相关属性</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetDeviceProperties</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span></code></pre></div><h3 id="查询gpu计算核心数量" tabindex="-1">查询GPU计算核心数量 <a class="header-anchor" href="#查询gpu计算核心数量" aria-label="Permalink to &quot;查询GPU计算核心数量&quot;">​</a></h3><p>无运行时API可直接查询，根据其主版本号，次版本号及SM数量，使用下面函数可计算</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">./tools/setDevice.cuh</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> getSPcores</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaDeviceProp </span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">  </span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">multiProcessorCount</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    switch</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">major</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Fermi</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 48</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 3</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Kepler</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">      cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 192</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 5</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Maxwell</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">      cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 6</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Pascal</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> ((</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ||</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 7</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Volta and Turing</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> ((</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ||</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 5</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 8</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Ampere</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 6</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 9</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // ada lovelace</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 9</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Hopper</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     default</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">      printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> </span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">      }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    cudaDeviceProp prop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetDeviceProperties</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Compute cores is %d.</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> getSPcores</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h2 id="组织线程模型" tabindex="-1">组织线程模型 <a class="header-anchor" href="#组织线程模型" aria-label="Permalink to &quot;组织线程模型&quot;">​</a></h2><p>数据在内存中以线性，以行为主的方式存储。发挥GPU中多线程的优点，就是要让每个线程处理不同的数据运算，必须合理的组织线程，避免多个线程处理同一数据或胡乱访问内存的情况出现。</p><h3 id="二维网格二维线程块" tabindex="-1">二维网格二维线程块 <a class="header-anchor" href="#二维网格二维线程块" aria-label="Permalink to &quot;二维网格二维线程块&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span>ix = threadIdx.x + blockIdx.x*blockDim.x;</span></span>
<span class="line"><span>iy = threadIdx.y + blockIdx.y+blockDim.y;</span></span>
<span class="line"><span>idx = iy*nx + ix;</span></span></code></pre></div><h3 id="二维网格一维线程块" tabindex="-1">二维网格一维线程块 <a class="header-anchor" href="#二维网格一维线程块" aria-label="Permalink to &quot;二维网格一维线程块&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span>ix = threadIdx.x + blockIdx.x * blockDim.x;</span></span>
<span class="line"><span>iy = blockIdx.y;</span></span>
<span class="line"><span>idx = iy * nx + ix;</span></span></code></pre></div><h3 id="一维网格一维线程块" tabindex="-1">一维网格一维线程块 <a class="header-anchor" href="#一维网格一维线程块" aria-label="Permalink to &quot;一维网格一维线程块&quot;">​</a></h3><p>此时无法做到每个线程对应矩阵中一个元素，需要循环执行。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__global__ </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> addMatrix</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">C</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> nx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ix </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 此时iy 由循环执行决定</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    for</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iy </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iy </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iy</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">++</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    {</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">        int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> idx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iy </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> nx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ix</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">        C</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">idx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">idx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">idx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h2 id="全局内存" tabindex="-1">全局内存 <a class="header-anchor" href="#全局内存" aria-label="Permalink to &quot;全局内存&quot;">​</a></h2><p>对全局内存的访问将触发内存事务，也就是数据传输。在线程访问内存引发数据传输的过程中，传输的数据有的是线程所需要的，而有的是额外数据，对他们的传输产生了资源浪费，使用合并度对资源利用率进行衡量。</p><h3 id="合并与非合并访问" tabindex="-1">合并与非合并访问 <a class="header-anchor" href="#合并与非合并访问" aria-label="Permalink to &quot;合并与非合并访问&quot;">​</a></h3>`,51),B=s("br",null,null,-1),v={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.528ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1117.6 833","aria-hidden":"true"},f=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(714,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1),b=[f],w=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"L"),s("mn",null,"2")])])],-1),L={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},I={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.528ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1117.6 833","aria-hidden":"true"},P=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(714,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1),H=[P],V=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"L"),s("mn",null,"2")])])],-1),q=a(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>CUDA运行时API cudaMalloc()分配内存的首地址至少为256字节的整数倍。</p></div><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// 合并访问</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __global__ </span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">add</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> n </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">    z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">add</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">128</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span></code></pre></div><p>可以看到，核函数中对这几个指针的访问都是合并的。例如，在第一个线程块中的线程束将访问数组中的0到31个数据，对应着0到127字节的连续内存，是合并访问。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// 非合并访问</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __global__ </span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">add</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> n </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">gridDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">    z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">add</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">128</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">x</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">z</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span></code></pre></div>`,4),N={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},M={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.816ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.52ex",height:"2.79ex",role:"img",focusable:"false",viewBox:"0 -872.7 5091.7 1233.3","aria-hidden":"true"},U=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(396.8,394) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)" style="stroke-width:3;"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(1424.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2480.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(1000,0)" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4258.7,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z" style="stroke-width:3;"></path></g></g></g>',1),S=[U],G=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mfrac",null,[s("mn",null,"4"),s("mn",null,"32")]),s("mo",null,"="),s("mn",null,"12.5"),s("mi",{mathvariant:"normal"},"%")])],-1),Z=a(`<h3 id="矩阵转置-例" tabindex="-1">矩阵转置(例) <a class="header-anchor" href="#矩阵转置-例" aria-label="Permalink to &quot;矩阵转置(例)&quot;">​</a></h3><p>下面为完整的矩阵转置的例子，代码中首先生成了一个给定大小的随机方阵，之后进行了转置并对核函数进行记时。值得一提的是，在两种核函数中都包含了一个合并访问和一个非合并访问，但其执行速度却不同。这是因为，如果编译器判断一个全局变量在整个核函数范围内只可读，则会自动使用<code>__ldg()</code>函数对数据的读取进行缓存，从而环节非合并访问带来的影响。而在写入操作是没有类似的函数可以调用的。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">./tools/setDevice.cuh</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// 设计核函数</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__global__ </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> transpose1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> nx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">nx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">        B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">nx</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">ny</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">nx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 此时对于A的内存访问为合并的，即读合并，写非合并。</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__global__ </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> transpose2</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> nx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">x</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> threadIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> blockDim</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">nx </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> ny</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">        B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">ny</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> nx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> __ldg</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">nx</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">ny</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">])</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 此时对于B的内存访问为合并的，即写合并，读非合并。</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> initialData</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">addr</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> elemCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    for</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> i </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> i </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elemCount</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> i</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">++</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    {</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">        addr</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">[</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">i</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> =</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">rand</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> &amp;</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> 0x</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">FF</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> /</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 10.</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">f;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 做逻辑与操作，限制随机数不超过255/10</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    SetGPU</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置GPU</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置矩阵大小</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iElemCount </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">             // 设置元素数量</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    size_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iElemCount </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> sizeof</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 字节数</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 分配主机内存</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    fpHost_A </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">malloc</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 分配动态内存</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    fpHost_B </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">malloc</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> NULL</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> &amp;&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpHost_B </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> NULL</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    {</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        memset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">  // 主机内存初始化为0</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        memset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    {</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Fail to allocate host memory!</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    float</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_B</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMalloc</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">((</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float**</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMalloc</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">((</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float**</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> NULL</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> &amp;&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> NULL</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMemset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设备内存初始化为0</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMemset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">fail to allocate memory</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        free</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 释放先前CPU中制定的内存</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        free</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">     // 初始化主机中数据</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    srand</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">666</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置随机种子</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    initialData</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iElemCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 主机复制到设备</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMemcpy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaMemcpyHostToDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMemcpy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaMemcpyHostToDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">   </span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 调用核函数</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    const</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> dim3 </span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">block</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置block大小为2维32, 32</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    dim3 </span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">grid</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">((</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">/</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">/</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //向上取整，设置grid大小</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 预热</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    transpose1</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">grid</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> block</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> </span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 设置开始事件</span></span>
<span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">    cudaEvent_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> </span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    cudaEventQuery</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    transpose1</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">grid</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> block</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">N</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">  //调用核函数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    float</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventElapsedTime</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">elapsed_time</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Time = %g ms.</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 打印时间</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 将计算得到的数据从设备传给主机</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaMemcpy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stBytesCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaMemcpyDeviceToHost</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 释放主机与设备内存</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    free</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    free</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpHost_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaFree</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaFree</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaDeviceReset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div>`,3);function z(R,j,J,O,$,W){return h(),k("div",null,[l,s("div",p,[E,s("p",null,[i("注意网格与线程块大小具有限制，通常，网格大小在"),s("mjx-container",e,[(h(),k("svg",F,d)),C]),i("上最大允许"),s("mjx-container",D,[(h(),k("svg",g,A)),o]),i(", 65535, 65535。线程块大小在"),s("mjx-container",c,[(h(),k("svg",_,Q)),m]),i("分别为1024, 1024, 1024且总的线程块大小不超过1024。")])]),u,s("p",null,[i("合并度等于线程束请求的字节数除以由该请求导致的数据传输处理的全部数据的字节数。当合并度为100%也就是说线程数对全局内存的一次访问请求导致了最少的数据传输，我们称该访问为合并访问，否则为非合并的。"),B,i(" 要分析一个访问是合并的还是非合并的，首先要明晰数据传对数据地址的要求(这里考虑全局内存的读取仅使用"),s("mjx-container",v,[(h(),k("svg",x,b)),w]),i("缓存的情况)： 一次数据传输中从全局内存转移到"),s("mjx-container",L,[(h(),k("svg",I,H)),V]),i("缓存的一片内存的首地址，一定是最小粒度的整数倍(这里为32)。例如，一次传输只能从全局内存中读取地址为0到31字节。以线程请求访问单精度浮点数(4字节)为例，一个线程束总共需要访问128字节，若这128字节的地址恰好为0到127，则此时仅4次传输即可，此时合并度为100%，为合并访问。 下面给出实例")]),q,s("p",null,[i("如上，第一个线程块中的线程束将对数组中第0, 128, 256...元素进行访问，都不在同一个连续32字节的内存片段中，故需要访问32次，此时合并率为"),s("mjx-container",N,[(h(),k("svg",M,S)),G]),i("，为非合并访问。")]),Z])}const K=n(t,[["render",z]]);export{Y as __pageData,K as default};
