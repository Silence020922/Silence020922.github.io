import{_ as i,o as a,c as s,R as l}from"./chunks/framework.CP3Xps-Z.js";const u=JSON.parse('{"title":"linux入门","description":"本专题仅为个人人无事做的学习记录","frontmatter":{"date":"2022-10-10T00:00:00.000Z","title":"linux入门","tags":["Linux"],"description":"本专题仅为个人人无事做的学习记录"},"headers":[],"relativePath":"posts/theme-VIM.md","filePath":"posts/theme-VIM.md"}'),e={name:"posts/theme-VIM.md"},n=l(`<h2 id="发行版本" tabindex="-1">发行版本 <a class="header-anchor" href="#发行版本" aria-label="Permalink to &quot;发行版本&quot;">​</a></h2><p>首先为读者介绍当前主流的发行版分支：</p><h3 id="debian分支" tabindex="-1">Debian分支 <a class="header-anchor" href="#debian分支" aria-label="Permalink to &quot;Debian分支&quot;">​</a></h3><p>Debian 是一个完全由自由软件构成的类 UNIX 操作系统，第一个版本发布于 1993 年 9 月 15 日，迄今仍在维护，是最早的发行版之一。其以坚持自由软件精神和生态环境优良而出名，拥有庞大的用户群体，甚至自己也成为了一个主流的子框架，称为“Debian GNU/Linux”。<br> Debian GNU/Linux 也派生了很多发行版，其中最为著名的便是 Ubuntu（官方译名“友邦拓”）。Ubuntu 由英国的 Canonical 公司主导创立，是一个主打桌面应用的操作系统。其为一般用户提供了一个时新且稳定的由自由软件构成的操作系统，且拥有庞大的社群力量和资源，十分适合普通用户使用。</p><h3 id="red-hat分支" tabindex="-1">Red Hat分支 <a class="header-anchor" href="#red-hat分支" aria-label="Permalink to &quot;Red Hat分支&quot;">​</a></h3><p>Red Hat Linux 是美国的 Red Hat 公司发行的一个发行版，第一个版本发布于 1994 年 11 月 3 日，也是一个历史悠久的发行版。它曾经也广为使用，但在 2003 年 Red Hat 公司停止了对它的维护，转而将精力都投身于其企业版 Red Hat Enterprise Linux（简称 RHEL）上，Red Hat Linux 自此完结，而商业市场导向的 RHEL 维护至今。<br> 在 Red Hat Linux 在停止官方更新后，由社群启动的 Fedora 项目接管了其源代码并构筑了自己的更新，演变成了如今的 Fedora 发行版。Fedora 是一套功能完备且更新迅速的系统，且本身计划也受到了 Red Hat 公司的赞助，成为了公司测试新技术的平台。<br> 虽然 RHEL 是一个收费的、商业化的系统，但是其遵循 GNU 通用公共许可证，因此会开放源代码。编译这些源代码可以重新得到一个可以使用的操作系统，即一个新的发行版：CentOS（Community Enterprise Operating System，社区版企业操作系统）。因为 CentOS 几乎完全编译自 RHEL 的代码，所以其也像 RHEL 一样具有企业级别的稳定性，适合在要求高度稳定的服务器上运行。</p><p>2020 年 12 月，CentOS 社区在其博客中宣布未来的重点转向 CentOS Stream，这是一个全新的滚动发行版。在此之前，RHEL 的上游为 Fedora，而 CentOS 的上游为 RHEL；在推出 CentOS Stream 之后，它就成为了 RHEL 的上游发行版。与此同时，CentOS 8 的支持期限被缩短至 2021 年底，且不再推出新的非 Stream 的 CentOS 版本。不满于该决定的人们也组织了新的社区，推出了诸如 AlmaLinux、Rocky Linux 等发行版。</p><h3 id="arch-linux分支" tabindex="-1">Arch Linux分支 <a class="header-anchor" href="#arch-linux分支" aria-label="Permalink to &quot;Arch Linux分支&quot;">​</a></h3><p>Arch Linux 是一个基于 x86-64 架构的 Linux 发行版，不过因为其内核默认就包含了部分非自由的模块，所以其未受到 GNU 计划的官方支持。即便如此，Arch Linux 也因其“简单、现代、实在、人本、万能”的宗旨赢得了 Linux 中坚用户的广泛青睐。不过，Arch Linux 对这个宗旨的定义和其它发行版有所区别。通常的操作系统为了方便用户快速上手，都是尽可能隐藏底层细节，从而避免用户了解操作系统的运行知识即可直接使用。但是 Arch Linux 则是重在构建优雅、极简的代码结构，这方便了使用者去理解系统，但不可避免地要求使用者自身愿意去了解操作系统的运作方式。某种程度上说，它的“简单”和“人本”注重的是方便用户通过了解而去最大化地利用它，而不是采取屏蔽工作原理的方式来降低使用门槛。因此，本书不建议初学者直接上手 Arch Linux，但十分推荐在读者对 Linux 有进一步了解之后去探索它。<br> Arch Linux 拥有强大的功能，但因其特殊的理念使得用户不易使用。为了能让一般用户也能用上 Arch Linux 的强大功能，它的变种 Manjaro 发行版于 2011 年问世。Manjaro 发行版基于 Arch Linux，但更注重易用，因而更适合一般用户。</p><h2 id="vim入门" tabindex="-1">VIM入门 <a class="header-anchor" href="#vim入门" aria-label="Permalink to &quot;VIM入门&quot;">​</a></h2><h3 id="配置vim为默认编辑器" tabindex="-1">配置vim为默认编辑器 <a class="header-anchor" href="#配置vim为默认编辑器" aria-label="Permalink to &quot;配置vim为默认编辑器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> ~/.bash_profile</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> #使用vim编辑该文件</span></span></code></pre></div><p>在适当位置插入以下内容</p><div class="language-vim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vim</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">export EDITOR</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">&#39;vim&#39;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">esc </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> :wq </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">保存并退出</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果使用其他<code>shell</code>例如<code>zsh</code>请使用命令</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> ~/.zshrc</span></span></code></pre></div></div><h3 id="基本介绍" tabindex="-1">基本介绍 <a class="header-anchor" href="#基本介绍" aria-label="Permalink to &quot;基本介绍&quot;">​</a></h3><p>vim具有四个基本模式，分别为</p><blockquote><ol><li>正常模式(normal mode)</li><li>可视模式(Visual mode)</li><li>插入模式(insert mode)</li><li>命令模式(command mode)</li></ol></blockquote><p>终端内</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> +</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file-name</span></span></code></pre></div><p>进入vim窗口，默认为正常模式。<br> 在默认模式按下</p><ul><li>v 进入可视模式</li><li>i 进入插入模式</li><li>: 进入命令模式</li><li>在以上三种模式中按下<code>esc</code> OR <code>ctrl+[</code> 可返回正常模式</li></ul><h3 id="基本命令" tabindex="-1">基本命令 <a class="header-anchor" href="#基本命令" aria-label="Permalink to &quot;基本命令&quot;">​</a></h3><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file1</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file2</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> ...</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> #可同时打开多个文件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -On</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file1</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file2</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> ...</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> #对打开的文件执行左右分屏操作，n为具体文件数目</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">vim</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -on</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file1</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file2...</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> #上下分屏</span></span></code></pre></div><h3 id="正常模式" tabindex="-1">正常模式 <a class="header-anchor" href="#正常模式" aria-label="Permalink to &quot;正常模式&quot;">​</a></h3><h4 id="分屏" tabindex="-1">分屏 <a class="header-anchor" href="#分屏" aria-label="Permalink to &quot;分屏&quot;">​</a></h4><ul><li>按住ctrl+w后按下s,可上下分屏</li><li>ctrl+w后按下v可左右分屏</li><li>:sp file 打开新文件并与正在编辑文件上下分屏</li><li>:vsp file 打开新文件并左右分屏</li><li>hjkl分别对应了光标向左下上右移动，同样</li><li>ctrl+w 后录入 hjkl可以使得当前光标移动到对应位置的分屏，录入HJKL可使得分屏位置发生改变</li><li>ctrl+w 后按下c即可关闭分屏</li><li>直接键入:q也可退出当前分屏</li></ul><h4 id="基操" tabindex="-1">基操 <a class="header-anchor" href="#基操" aria-label="Permalink to &quot;基操&quot;">​</a></h4><ul><li>:ls 展示当前打开文件的编号及名称</li><li>:bn 编辑编号为n的文件</li><li>：q 退出文件且不保存</li><li>:qa! 退出所有文件且不保存</li><li>:w 保存修改 搭配:wq 保存且推出</li><li>:w! 强制保存</li><li>:e! 放弃对文件的所有修改恢复文件到上次位置</li><li>:saveas file 另存为</li></ul><h4 id="快捷键——翻页、移动光标" tabindex="-1">快捷键——翻页、移动光标 <a class="header-anchor" href="#快捷键——翻页、移动光标" aria-label="Permalink to &quot;快捷键——翻页、移动光标&quot;">​</a></h4><h5 id="在当前行上移动光标" tabindex="-1">在当前行上移动光标 <a class="header-anchor" href="#在当前行上移动光标" aria-label="Permalink to &quot;在当前行上移动光标&quot;">​</a></h5><blockquote><p>0 移动到行头<br> ^ 移动到本行的第一个不是 blank 字符<br> $ 移动到行尾<br> fa 移动到本行下一个为 a 的字符处，fb 移动到下一个为 b 的字符处<br> nfa 移动到本行光标处开始的第 n 个 字符为 a 的地方（n 是 1，2，3，4 ... 数字）<br> Fa 同 fa 一样，光标移动方向同 fa 相反<br> nFa 同 nfa 类似，光标移动方向同 nfa相反<br> ta 移动光标至 a 字符的前一个字符<br> nta 移动到第二个 a 字符的前一个字符处<br> Ta 同 ta 移动光标方向相反<br> nTa 同 nta 移动光标方向相反</p></blockquote><h5 id="跨行移动光标" tabindex="-1">跨行移动光标 <a class="header-anchor" href="#跨行移动光标" aria-label="Permalink to &quot;跨行移动光标&quot;">​</a></h5><blockquote><p>nG 光标定位到第 n 行的行首<br> gg 光标定位到第一行的行首<br> G 光标定位到最后一行的行首<br> H 光标定位到当前屏幕的第一行行首<br> L 光标移动到当前屏幕的尾部</p></blockquote><h5 id="翻页" tabindex="-1">翻页 <a class="header-anchor" href="#翻页" aria-label="Permalink to &quot;翻页&quot;">​</a></h5><blockquote><p>ctrl +f 查看下一页内容<br> ctrl +b 查看上一页内容</p></blockquote><h4 id="删除-d-复制-y-粘贴-p" tabindex="-1">删除(d) 复制(y) 粘贴(p) <a class="header-anchor" href="#删除-d-复制-y-粘贴-p" aria-label="Permalink to &quot;删除(d) 复制(y) 粘贴(p)&quot;">​</a></h4><blockquote><p>d 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：<br> dd 删除一整行<br> d$ 删除光标到本行的结尾<br> dH 删除屏幕显示的第一行文本到光标所在的行<br> dG 删除光标所在行到文本的结束<br> yw 复制一个单词，还有 ynw 复制 n 个单词<br> yy 复制一行，还有 nyy 复制n行<br> y$ 复制光标到本行的结尾<br> yH 复制屏幕显示的第一行文本到光标所在的行<br> yG 复制光标所在行到文本的结束<br> p 在光标后开始黏贴<br> P 大写的 P 光标前开始粘贴</p></blockquote><h3 id="输入模式" tabindex="-1">输入模式 <a class="header-anchor" href="#输入模式" aria-label="Permalink to &quot;输入模式&quot;">​</a></h3><pre><code>可利用n+G快速定位到第n行
</code></pre><h4 id="模式进入" tabindex="-1">模式进入 <a class="header-anchor" href="#模式进入" aria-label="Permalink to &quot;模式进入&quot;">​</a></h4><ul><li>i是在光标所在的字符之前插入需要录入的文本。</li><li>I 是在光标所在行的行首插入需要录入的文本。</li><li>a是在光标所在的字符之后插入需要录入的文本。</li><li>A 是在光标所在行的行尾插入需要录入的文本。</li><li>s 删除光标所在处的字符然后插入需要录入的文本。</li><li>S 删除光标所在行，在当前行的行首开始插入需要录入的文本。</li></ul><h3 id="命令模式" tabindex="-1">命令模式 <a class="header-anchor" href="#命令模式" aria-label="Permalink to &quot;命令模式&quot;">​</a></h3><h4 id="语法-参考这篇文章" tabindex="-1">语法(参考<a href="https://www.zhihu.com/question/437735833/answer/1733228460" target="_blank" rel="noreferrer">这篇文章</a>) <a class="header-anchor" href="#语法-参考这篇文章" aria-label="Permalink to &quot;语法(参考[这篇文章](https://www.zhihu.com/question/437735833/answer/1733228460))&quot;">​</a></h4><ul><li>动词 <ul><li>d 删除 delete</li><li>r 替换 replace</li><li>c 修改 change</li><li>y 复制 yank</li><li>v 选取 visual select</li></ul></li><li>名词 <ul><li>w 单词 word</li><li>s 句子 sentence</li><li>p 段落 paragraph</li><li>t HTML标签 tag</li><li>引号或者各种括号所包含的文本称作一个文本块。</li></ul></li><li>介词 <ul><li>i “在…之内”inside</li><li>a “环绕…”around</li><li>t “到…位置前”to</li><li>f “到…位置上”forward</li></ul></li></ul><h4 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h4><div class="language-vim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vim</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">set</span><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;"> nu</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> #</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">显示行号</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">set</span><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;"> nonu</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> #</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">取消行号</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">:n </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">定位到n行</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">/string </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">查找目标字符串</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">:n1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n2d </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">删除多行文本</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">:{作用范围}s</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">/{目标}/</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">{替换}/{替换的标志}  </span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">作用范围空-光标所在行 %-全局 n1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">n2-区间</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">替换的标志 g-全局 空-目标第一次出现 i-不区分大小写 I-大小写敏感 c-替换前需要确认</span></span></code></pre></div><h3 id="宏录制" tabindex="-1">宏录制 <a class="header-anchor" href="#宏录制" aria-label="Permalink to &quot;宏录制&quot;">​</a></h3><p>在此特别拿出一个专栏来提一下宏录制，感觉这是一个比较好用的功能。<br> 开启需处于正常模式下，输入q后按a创建@a宏录制文件。<br> 此后所进行的所有命令会被录制下来，录制过程中返回到正常模式后再次按下q可退出录制。<br> 退出录制模式后采用@a可重复a模块，@@重复上一次宏录制操作。<br> 例如，如果我想在每行后添加四个空格实现换行操作，可</p><div class="language-vim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vim</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">qa </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">正常模式下创建宏录制</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">A </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">光标导向至行尾且进入编辑模式</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">space*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">4</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> +</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> esc </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> q</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">#</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">推出宏录制</span></span></code></pre></div><p>最后只要无脑<code>@a</code>或者<code>@@</code>便可。</p><h2 id="linux-基础命令" tabindex="-1">Linux 基础命令 <a class="header-anchor" href="#linux-基础命令" aria-label="Permalink to &quot;Linux 基础命令&quot;">​</a></h2><h3 id="文档与文件管理" tabindex="-1">文档与文件管理 <a class="header-anchor" href="#文档与文件管理" aria-label="Permalink to &quot;文档与文件管理&quot;">​</a></h3>`,53),t=[n];function h(r,p,k,d,o,c){return a(),s("div",null,t)}const D=i(e,[["render",h]]);export{u as __pageData,D as default};
