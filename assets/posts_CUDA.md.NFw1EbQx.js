import{_ as s,o as i,c as a,R as h}from"./chunks/framework.CP3Xps-Z.js";const g=JSON.parse('{"title":"CUDA编程","description":"无...","frontmatter":{"date":"2024-03-01T00:00:00.000Z","title":"CUDA编程","tags":["CUDA"],"description":"无..."},"headers":[],"relativePath":"posts/CUDA.md","filePath":"posts/CUDA.md"}'),k={name:"posts/CUDA.md"},n=h(`<h1 id="入门-with-c" tabindex="-1">入门(with C++) <a class="header-anchor" href="#入门-with-c" aria-label="Permalink to &quot;入门(with C++)&quot;">​</a></h1><p>这部分资源来自B站视频，<a href="https://www.bilibili.com/video/BV1sM4y1x7of/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=51a76af86bf4fcc9da32a69c092094ea" target="_blank" rel="noreferrer">权双</a>，作为入门+快速了解。</p><h2 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__global__ </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> hello_world2gpu</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Hello world, from GPU.</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //nvcc不支持cout&lt;&lt;方式输出</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    hello_world2gpu</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // &lt;&lt;&lt;grid_size,block_size&gt;&gt;&gt;配置线程 线程块数量-单个块线程数量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    cudaDeviceSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 同步函数</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex1</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -arch=compute_61</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -code=sm_80</span></span></code></pre></div><p><code>-arch=compute_xx</code>指定虚拟架构，<code>-code=sm_xx</code>指定真实计算能力，实践中保持兼容性的条件下，虚拟架构尽可能小，真实架构尽可能大。<br> 同时，为保证兼容性，可以指定多组计算能力，例如</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex2_fat</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_50,code=sm_50</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_60,code=sm_60</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_70,code=sm_70</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_80,code=sm_80</span></span></code></pre></div><p>生成的可执行文件称为胖二进制文件，注意过多制定计算能力会增加编译时间和可执行文件的大小。</p><h2 id="nvcc即时编译" tabindex="-1">NVCC即时编译 <a class="header-anchor" href="#nvcc即时编译" aria-label="Permalink to &quot;NVCC即时编译&quot;">​</a></h2><p>参考<a href="https://zhuanlan.zhihu.com/p/432674688" target="_blank" rel="noreferrer">知乎</a><br> 大概用于在当前架构下生成更前向的虚拟架构的PTX代码，此时指定的两个计算能力都是虚拟架构的计算能力，且必须一致，例如： 若本人GPU不支持80架构</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">nvcc</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Hello2thread.cu</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -o</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> Ex2_fat</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_50,code=sm_50</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_60,code=sm_60</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_70,code=sm_70</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> -gencode</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> arch=compute_80,code=compute_80</span></span></code></pre></div><h2 id="cuda矩阵加法" tabindex="-1">CUDA矩阵加法 <a class="header-anchor" href="#cuda矩阵加法" aria-label="Permalink to &quot;CUDA矩阵加法&quot;">​</a></h2><p>代码参考<a href="https://github.com/sangyc10/CUDA-code/tree/master/3.1lesson" target="_blank" rel="noreferrer">github</a></p><h3 id="cuda程序框架" tabindex="-1">CUDA程序框架 <a class="header-anchor" href="#cuda程序框架" aria-label="Permalink to &quot;CUDA程序框架&quot;">​</a></h3><ul><li>设置GPU</li></ul><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 头文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">void</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDeviceCount</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">    cudaError_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> cudaGetDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 获取GPU数量，成功返回cudaSuccess</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">||</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDeviceCount </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">No CUDA camptable GPU found! </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">The count of GPUs is %d. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDeviceCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iDev </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDev</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // host 设置GPU</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaStatus </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Fail to set GPU %d for computing. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">iDev</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        exit</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;">1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Set GPU successfully. </span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h3 id="内存管理" tabindex="-1">内存管理 <a class="header-anchor" href="#内存管理" aria-label="Permalink to &quot;内存管理&quot;">​</a></h3><p>参考<a href="https://www.runoob.com/cprogramming/c-memory-management.html" target="_blank" rel="noreferrer">菜鸟教程</a></p><h3 id="自定义设备函数" tabindex="-1">自定义设备函数 <a class="header-anchor" href="#自定义设备函数" aria-label="Permalink to &quot;自定义设备函数&quot;">​</a></h3><ul><li>设备函数使用<code>__device__</code>修饰</li><li>核函数使用<code>__global__</code>函数修饰，一般由主机调用，设备执行。(也存在核函数中调用核函数的现象，此时由设备调用)</li><li><code>__global__</code>不能和<code>__host__</code>，<code>__device__</code>同时使用。</li><li>主机函数使用<code>__host__</code>修饰，对于主机端的函数，该修饰符可省略。</li><li>若函数需在主机和设备中运行，可使用<code>__host__</code>, <code>__device__</code>同时修饰该函数，此时编译器会针对主机和设备分别编译该函数，减少冗余代码。</li></ul><h2 id="cuda错误检查" tabindex="-1">CUDA错误检查 <a class="header-anchor" href="#cuda错误检查" aria-label="Permalink to &quot;CUDA错误检查&quot;">​</a></h2><p>CUDA错误会发生在两个阶段——编译时错误，运行时错误。编译时发生错误编译器会将错误所在位置进行返回。</p><h3 id="runtime-api-错误" tabindex="-1">Runtime API 错误 <a class="header-anchor" href="#runtime-api-错误" aria-label="Permalink to &quot;Runtime API 错误&quot;">​</a></h3><p>参考<a href="https://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__TYPES.html#group__CUDART__TYPES_1g3f51e3575c2178246db0a94a430e0038" target="_blank" rel="noreferrer">Nvida官方文档</a></p><h3 id="错误检查函数" tabindex="-1">错误检查函数 <a class="header-anchor" href="#错误检查函数" aria-label="Permalink to &quot;错误检查函数&quot;">​</a></h3><p><code>cudaGetErrorName</code>: 获取错误代码对应的错误名称，返回 <code>char *</code>类型<br><code>cudaGetErrorString</code>: 获取错误代码的描述信息，返回<code>char *</code>类型</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaError_t</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaError_t</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> const</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> char*</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> filename</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> int</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> linenum</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">!=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cudaSuccess</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">        printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Cuda_Error:</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">code:%d, name:%s, description:%s</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;"> file:%s, line:%d</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">        error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetErrorName</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetErrorString</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">error_code</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">filename</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">linenum</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> error_code</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div><h3 id="检查核函数" tabindex="-1">检查核函数 <a class="header-anchor" href="#检查核函数" aria-label="Permalink to &quot;检查核函数&quot;">​</a></h3><p>错误检查函数无法捕捉调用核函数相关错误，由于<code>__global__ void</code>，核函数不会返回错误值，可使用如下代码捕捉核函数中的可能错误。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetLastError</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// 返回上一条cuda_Error</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaDeviceSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //由于CPU与GPU异步，需在此加入一个同步函数，等待核函数运行完成。</span></span></code></pre></div><h2 id="cuda记时" tabindex="-1">CUDA记时 <a class="header-anchor" href="#cuda记时" aria-label="Permalink to &quot;CUDA记时&quot;">​</a></h2><h3 id="事件记时" tabindex="-1">事件记时 <a class="header-anchor" href="#事件记时" aria-label="Permalink to &quot;事件记时&quot;">​</a></h3><p>程序执行时间计时，是CUDA程序执行性能的重要表现，使用<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__EVENT.html" target="_blank" rel="noreferrer">事件记时</a>方式。框架如下</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#8FBCBB;--shiki-dark:#8FBCBB;">cudaEvent_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 定义用来记时的CUDA事件变量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //初始化事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventCreate</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 记录代表时间开始的事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventQuery</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">	//此处不可用错误检测函数，cudaErrorNotReady</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">addFromGPU</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&lt;&lt;&lt;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">grid</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> block</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;&gt;&gt;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">fpDevice_A</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_B</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> fpDevice_C</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> iElemCount</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">    // 核函数，需要记时的代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventRecord</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 记录代表时间结束的事件</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventSynchronize</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">float</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventElapsedTime</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">elapsed_time</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> //计算两个work间的elapsed time</span></span>
<span class="line"><span style="--shiki-light:#616E88;--shiki-dark:#616E88;">// printf(&quot;Time = %g ms.\\n&quot;, elapsed_time);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">repeat </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&gt;</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 不计入第0次的情况，这是由于第一次调用核函数往往时间更多</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    t_sum </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> elapsed_time</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventDestroy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">start</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 销毁前面定义的时间类型变量</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaEventDestroy</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">stop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span></code></pre></div><h3 id="nvprof-性能刨析工具" tabindex="-1">nvprof 性能刨析工具 <a class="header-anchor" href="#nvprof-性能刨析工具" aria-label="Permalink to &quot;nvprof 性能刨析工具&quot;">​</a></h3><p><code>nvprof</code>是一个可执行文件，执行方式为: <code>nvprof ./exe_name</code>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>目前较新的GPU可能不再支持nvprof，可替换为Nsight System，Arch系统下包含在cuda-tools包中，执行nsys进行分析。</p></div><h2 id="运行时gpu信息的查询" tabindex="-1">运行时GPU信息的查询 <a class="header-anchor" href="#运行时gpu信息的查询" aria-label="Permalink to &quot;运行时GPU信息的查询&quot;">​</a></h2><p>查询熟知自身GPU性各项能才能高效进行CUDA程序开发，参考<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__DEVICE.html" target="_blank" rel="noreferrer">Nvida doc</a></p><h3 id="运行时api查询gpu信息" tabindex="-1">运行时API查询GPU信息 <a class="header-anchor" href="#运行时api查询gpu信息" aria-label="Permalink to &quot;运行时API查询GPU信息&quot;">​</a></h3><p>GPU硬件知识参考<a href="https://zhuanlan.zhihu.com/p/462191421" target="_blank" rel="noreferrer">知乎</a>，<code>prop</code>结构体中包含的信息参考<a href="https://developer.download.nvidia.cn/compute/DevZone/docs/html/C/doc/html/group__CUDART__DEVICE_g5aa4f47938af8276f08074d09b7d520c.html#g5aa4f47938af8276f08074d09b7d520c" target="_blank" rel="noreferrer">Nvida</a></p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置设备ID</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 设置使用的GPU</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaDeviceProp prop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // 结构体，存储GPU相关属性</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetDeviceProperties</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span></code></pre></div><h3 id="查询gpu计算核心数量" tabindex="-1">查询GPU计算核心数量 <a class="header-anchor" href="#查询gpu计算核心数量" aria-label="Permalink to &quot;查询GPU计算核心数量&quot;">​</a></h3><p>无运行时API可直接查询，根据其主版本号，次版本号及SM数量，使用下面函数可计算</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &lt;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">stdio.h</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#5E81AC;--shiki-dark:#5E81AC;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">include</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">./tools/setDevice.cuh</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> getSPcores</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">cudaDeviceProp </span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">  </span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;"> devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">multiProcessorCount</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    switch</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">major</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">){</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Fermi</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 48</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 32</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 3</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Kepler</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">      cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 192</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 5</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Maxwell</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">      cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 6</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Pascal</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> ((</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 1</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ||</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 7</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Volta and Turing</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> ((</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ||</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 5</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 8</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Ampere</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 64</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 6</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 9</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // ada lovelace</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     case</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 9</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#616E88;--shiki-dark:#616E88;"> // Hopper</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      if</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">devProp</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">minor</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> ==</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> mp </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 128</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      else</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">     default</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">      printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Unknown device type</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> </span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">      break;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">      }</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> cores</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">int</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    int</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaSetDevice</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">    cudaDeviceProp prop</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    ErrorCheck</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">cudaGetDeviceProperties</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">&amp;</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> device_id</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">),</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __FILE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> __LINE__</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">    printf</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A3BE8C;--shiki-dark:#A3BE8C;">Compute cores is %d.</span><span style="--shiki-light:#EBCB8B;--shiki-dark:#EBCB8B;">\\n</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> getSPcores</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">prop</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">))</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">    return</span><span style="--shiki-light:#B48EAD;--shiki-dark:#B48EAD;"> 0</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">}</span></span></code></pre></div>`,45),l=[n];function p(t,E,e,F,r,C){return i(),a("div",null,l)}const D=s(k,[["render",p]]);export{g as __pageData,D as default};
