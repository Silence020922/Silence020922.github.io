import{_ as a,o as t,c as n,R as h,k as s,a as i}from"./chunks/framework.Y4B4HMlg.js";const y=JSON.parse('{"title":"Ascend C 问题求助","description":"无","frontmatter":{"date":"2024-04-16T00:00:00.000Z","title":"Ascend C 问题求助","tags":["Ascend C"],"description":"无"},"headers":[],"relativePath":"AscendC.md","filePath":"AscendC.md"}'),k={name:"AscendC.md"},e=h(`<h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>在对AscendC算子示例AddCustom进行接口泛化时，我的思路为在核函数中获取<code>input_y</code>的长度后，对于<code>yGm</code>指向超出长度的部分进行约束,重新设计偏移量</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes nord nord vp-code"><code><span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">uint32_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> y_length </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> sizeof</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">/sizeof</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">DTYPE_Y</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">        uint32_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> offset </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> this</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">-&gt;</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockLength</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> *</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;"> GetBlockIdx</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">        uint32_t</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> actualoffset </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> offset</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">%</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y_length</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span>
<span class="line"><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">        yGm</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#88C0D0;--shiki-dark:#88C0D0;">SetGlobalBuffer</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">((</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">__gm__ DTYPE_Y</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">*</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;">y </span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">+</span><span style="--shiki-light:#D8DEE9FF;--shiki-dark:#D8DEE9FF;"> actualoffset</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;"> this</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">-&gt;</span><span style="--shiki-light:#D8DEE9;--shiki-dark:#D8DEE9;">blockLength</span><span style="--shiki-light:#ECEFF4;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#81A1C1;--shiki-dark:#81A1C1;">;</span></span></code></pre></div><p>在样例AddCustom中添加上述代码后，对如下输入大小的数据类型能够测试通过。</p>`,4),l=s("ul",null,[s("li",{"8,2048":""},"input_x:"),s("li",{"1,2048":""},"input_y:")],-1),p=s("p",null,[i("但在改动后样例AddCustom(rw)中添加上述代码后，对"),s("code",null,"input_x"),i(", "),s("code",null,"input_y"),i("大小不一致的输入测试失败。")],-1),E=[e,l,p];function d(F,C,r,o,D,c){return t(),n("div",null,E)}const A=a(k,[["render",d]]);export{y as __pageData,A as default};
